services:
  kafka-0:
    container_name: kafka-0
    image: docker.io/bitnami/kafka:3.5
    hostname: kafka-0
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_DEFAULT_REPLICATION_FACTOR=3
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-0:9093,1@kafka-1:9093,2@kafka-2:9093
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-0:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_ENABLE_KRAFT=true
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_SASL_MECHANISM_INTER_BROKER_PROTOCOL=PLAIN
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    volumes:
      - kafka_0_data:/bitnami/kafka
    networks:
      - app_network
    restart: on-failure

  kafka-1:
    container_name: kafka-1
    image: docker.io/bitnami/kafka:3.5
    hostname: kafka-1
    ports:
      - "9095:9095"
      - "9096:9096"
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_DEFAULT_REPLICATION_FACTOR=3
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-0:9093,1@kafka-1:9093,2@kafka-2:9093
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9095,CONTROLLER://:9093,EXTERNAL://:9096
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-1:9095,EXTERNAL://localhost:9096
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_ENABLE_KRAFT=true
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_SASL_MECHANISM_INTER_BROKER_PROTOCOL=PLAIN
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    volumes:
      - kafka_1_data:/bitnami/kafka
    networks:
      - app_network
    restart: on-failure

  kafka-2:
    container_name: kafka-2
    image: docker.io/bitnami/kafka:3.5
    hostname: kafka-2
    ports:
      - "9097:9097"
      - "9098:9098"
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=2
      - KAFKA_CFG_DEFAULT_REPLICATION_FACTOR=3
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-0:9093,1@kafka-1:9093,2@kafka-2:9093
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9095,CONTROLLER://:9093,EXTERNAL://:9098
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-1:9095,EXTERNAL://localhost:9098
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_ENABLE_KRAFT=true
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_SASL_MECHANISM_INTER_BROKER_PROTOCOL=PLAIN
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    volumes:
      - kafka_2_data:/bitnami/kafka
    networks:
      - app_network
    restart: on-failure

  postgres0:
    container_name: postgres0
    image: postgres:15
    environment:
      POSTGRES_USER: userTest
      POSTGRES_PASSWORD: userTest123
      POSTGRES_DB: inventory_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    restart: always

  inventoryproducer:
    build:
      context: .
      dockerfile: InventoryProducer/Dockerfile
    networks:
      - app_network
    depends_on:
      - kafka-0
      - postgres0
      - opensearch-node1


  inventoryconsumer:
    build:
      context: .
      dockerfile: InventoryConsumer/Dockerfile
    networks:
      - app_network
    depends_on:
      - kafka-0
      - postgres0
      - opensearch-node1


  opensearch-node1:
    container_name: opensearch-node1
    image: opensearchproject/opensearch:latest
    environment:
      - cluster.name=opensearch-cluster
      - node.name=opensearch-node1
      - discovery.seed_hosts=opensearch-node1,opensearch-node2
      - cluster.initial_cluster_manager_nodes=opensearch-node1,opensearch-node2
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=myOpenSearchPass123&
      - "DISABLE_SECURITY_PLUGIN=true"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
    #- ./opensearch.yml:/usr/share/opensearch/config/opensearch.yml
    - opensearch-data1:/usr/share/opensearch/data
    ports:
      - "9200:9200"   
    networks:
      - app_network
    restart: always

  opensearch-node2:
    container_name: opensearch-node2
    image: opensearchproject/opensearch:latest
    environment:
      - cluster.name=opensearch-cluster
      - node.name=opensearch-node2
      - discovery.seed_hosts=opensearch-node1,opensearch-node2
      - cluster.initial_cluster_manager_nodes=opensearch-node1,opensearch-node2
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=myOpenSearchPass123&*
      - "DISABLE_SECURITY_PLUGIN=true"
    
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
   # - ./opensearch.yml:/usr/share/opensearch/config/opensearch.yml      
    - opensearch-data2:/usr/share/opensearch/data
    ports:
      - "9600:9600"
    networks:
      - app_network
    restart: always

  opensearch-dashboards:
    container_name: opensearch-dashboards
    image: opensearchproject/opensearch-dashboards:latest
    ports:
      - "5601:5601"
    environment:
      - 'OPENSEARCH_HOSTS=["http://opensearch-node1:9200","http://opensearch-node2:9200"]'
      - "DISABLE_SECURITY_DASHBOARDS_PLUGIN=true"
    networks:
      - app_network
    restart: always
volumes:
  kafka_0_data:
  kafka_1_data:
  kafka_2_data:
  postgres_data:
  opensearch-data1:
  opensearch-data2:

networks:
  app_network:
   driver: bridge